package CourseRegistrationApp;


/**
* CourseRegistrationApp/ServerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from dcrs.idl
* Wednesday, October 31, 2018 1:21:53 o'clock PM EDT
*/

public abstract class ServerPOA extends org.omg.PortableServer.Servant
 implements CourseRegistrationApp.ServerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("advisor_exists", new java.lang.Integer (0));
    _methods.put ("student_exists", new java.lang.Integer (1));
    _methods.put ("enroll", new java.lang.Integer (2));
    _methods.put ("addCourse", new java.lang.Integer (3));
    _methods.put ("dropCourse", new java.lang.Integer (4));
    _methods.put ("removeCourse", new java.lang.Integer (5));
    _methods.put ("listCourseAvailability", new java.lang.Integer (6));
    _methods.put ("getClassSchedule", new java.lang.Integer (7));
    _methods.put ("swapCourse", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CourseRegistrationApp/Server/advisor_exists
       {
         String advisor_id = in.read_string ();
         String dept = in.read_string ();
         boolean $result = false;
         $result = this.advisor_exists (advisor_id, dept);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // CourseRegistrationApp/Server/student_exists
       {
         String student_id = in.read_string ();
         String dept = in.read_string ();
         boolean $result = false;
         $result = this.student_exists (student_id, dept);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // CourseRegistrationApp/Server/enroll
       {
         String courseId = in.read_string ();
         String studentId = in.read_string ();
         String term = in.read_string ();
         String dept = in.read_string ();
         String $result = null;
         $result = this.enroll (courseId, studentId, term, dept);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // CourseRegistrationApp/Server/addCourse
       {
         String advisor_id = in.read_string ();
         String course_id = in.read_string ();
         String course_name = in.read_string ();
         String term = in.read_string ();
         String dept = in.read_string ();
         short capacity = in.read_short ();
         String $result = null;
         $result = this.addCourse (advisor_id, course_id, course_name, term, dept, capacity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // CourseRegistrationApp/Server/dropCourse
       {
         String advisor_id = in.read_string ();
         String course_id = in.read_string ();
         String term = in.read_string ();
         String dept = in.read_string ();
         String $result = null;
         $result = this.dropCourse (advisor_id, course_id, term, dept);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // CourseRegistrationApp/Server/removeCourse
       {
         String advisor_id = in.read_string ();
         String course_id = in.read_string ();
         String term = in.read_string ();
         String dept = in.read_string ();
         String $result = null;
         $result = this.removeCourse (advisor_id, course_id, term, dept);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // CourseRegistrationApp/Server/listCourseAvailability
       {
         String advisor_id = in.read_string ();
         String term = in.read_string ();
         String dept = in.read_string ();
         CourseRegistrationApp.TermHolder theTerm = new CourseRegistrationApp.TermHolder ();
         boolean $result = false;
         $result = this.listCourseAvailability (advisor_id, term, dept, theTerm);
         out = $rh.createReply();
         out.write_boolean ($result);
         CourseRegistrationApp.TermHelper.write (out, theTerm.value);
         break;
       }

       case 7:  // CourseRegistrationApp/Server/getClassSchedule
       {
         String studentId = in.read_string ();
         org.omg.CORBA.StringHolder courseList = new org.omg.CORBA.StringHolder ();
         boolean $result = false;
         $result = this.getClassSchedule (studentId, courseList);
         out = $rh.createReply();
         out.write_boolean ($result);
         out.write_string (courseList.value);
         break;
       }

       case 8:  // CourseRegistrationApp/Server/swapCourse
       {
         String studentIid = in.read_string ();
         String oldCourseId = in.read_string ();
         String newCourseId = in.read_string ();
         String dept = in.read_string ();
         boolean $result = false;
         $result = this.swapCourse (studentIid, oldCourseId, newCourseId, dept);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CourseRegistrationApp/Server:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Server _this() 
  {
    return ServerHelper.narrow(
    super._this_object());
  }

  public Server _this(org.omg.CORBA.ORB orb) 
  {
    return ServerHelper.narrow(
    super._this_object(orb));
  }


} // class ServerPOA
