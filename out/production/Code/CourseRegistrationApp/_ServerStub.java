package CourseRegistrationApp;


/**
* CourseRegistrationApp/_ServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from dcrs.idl
* Monday, November 5, 2018 2:37:21 o'clock PM EST
*/

public class _ServerStub extends org.omg.CORBA.portable.ObjectImpl implements CourseRegistrationApp.Server
{

  public boolean advisor_exists (String advisor_id, String dept)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("advisor_exists", true);
                $out.write_string (advisor_id);
                $out.write_string (dept);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return advisor_exists (advisor_id, dept        );
            } finally {
                _releaseReply ($in);
            }
  } // advisor_exists

  public boolean student_exists (String student_id, String dept)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("student_exists", true);
                $out.write_string (student_id);
                $out.write_string (dept);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return student_exists (student_id, dept        );
            } finally {
                _releaseReply ($in);
            }
  } // student_exists

  public String enroll (String courseId, String studentId, String term, String dept, boolean swapOp)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("enroll", true);
                $out.write_string (courseId);
                $out.write_string (studentId);
                $out.write_string (term);
                $out.write_string (dept);
                $out.write_boolean (swapOp);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return enroll (courseId, studentId, term, dept, swapOp        );
            } finally {
                _releaseReply ($in);
            }
  } // enroll

  public String addCourse (String advisor_id, String course_id, String course_name, String term, String dept, short capacity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addCourse", true);
                $out.write_string (advisor_id);
                $out.write_string (course_id);
                $out.write_string (course_name);
                $out.write_string (term);
                $out.write_string (dept);
                $out.write_short (capacity);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addCourse (advisor_id, course_id, course_name, term, dept, capacity        );
            } finally {
                _releaseReply ($in);
            }
  } // addCourse

  public String dropCourse (String advisor_id, String course_id, String term, String dept)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("dropCourse", true);
                $out.write_string (advisor_id);
                $out.write_string (course_id);
                $out.write_string (term);
                $out.write_string (dept);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return dropCourse (advisor_id, course_id, term, dept        );
            } finally {
                _releaseReply ($in);
            }
  } // dropCourse

  public String removeCourse (String advisor_id, String course_id, String term, String dept)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeCourse", true);
                $out.write_string (advisor_id);
                $out.write_string (course_id);
                $out.write_string (term);
                $out.write_string (dept);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeCourse (advisor_id, course_id, term, dept        );
            } finally {
                _releaseReply ($in);
            }
  } // removeCourse

  public boolean listCourseAvailability (String advisor_id, String term, String dept, CourseRegistrationApp.TermHolder theTerm)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listCourseAvailability", true);
                $out.write_string (advisor_id);
                $out.write_string (term);
                $out.write_string (dept);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                theTerm.value = CourseRegistrationApp.TermHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listCourseAvailability (advisor_id, term, dept, theTerm        );
            } finally {
                _releaseReply ($in);
            }
  } // listCourseAvailability

  public boolean getClassSchedule (String studentId, org.omg.CORBA.StringHolder courseList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getClassSchedule", true);
                $out.write_string (studentId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                courseList.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getClassSchedule (studentId, courseList        );
            } finally {
                _releaseReply ($in);
            }
  } // getClassSchedule

  public String swapCourse (String studentIid, String oldCourseId, String newCourseId, String dept, String term)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapCourse", true);
                $out.write_string (studentIid);
                $out.write_string (oldCourseId);
                $out.write_string (newCourseId);
                $out.write_string (dept);
                $out.write_string (term);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapCourse (studentIid, oldCourseId, newCourseId, dept, term        );
            } finally {
                _releaseReply ($in);
            }
  } // swapCourse

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CourseRegistrationApp/Server:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ServerStub
